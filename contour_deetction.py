# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i8tXCCPG-iyewJ3b47lysqM4onF15T4a
"""



#function for preprocessing----------------------------------------------
def processing(dir_name):
  alp_name = dir_name.split('/')[7]
  x=cv2.imread(dir_name)
  img= cv2.resize(x,(512, 512))
  img_hsv=cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
  color2 = fixHSVRange(h=370  , s=85, v=100)
  color1 = fixHSVRange(h=320, s=20, v=50)
  mask = cv2.inRange(img_hsv, color1, color2)
  output_img = img.copy()
  output_img[np.where(mask==0)] = 0


    # or your HSV image, which I *believe* is what you wa
  output_hsv = img_hsv.copy()
  output_hsv[np.where(mask==0)] = 0
   # defining the kernel i.e. Structuring element 
  kernel = np.ones((5, 5), np.uint8)    

  opening = cv2.morphologyEx(output_hsv, cv2.MORPH_OPEN, kernel)
  image = opening
  gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

  _, threshold_image = cv2.threshold(gray_image, 0, 255, cv2.THRESH_BINARY)
  return threshold_image

# function to detect alphabet------------------------------------------
def detect_contours(threshold_image):
  contours = measure.find_contours(threshold_image, 0.8)
  for i in contours:
    #print(i.shape[0])
    contour_list.append(i.shape[0])

# function to detect alphabet------------------------------------------
def detect_alphabet(threshold_image):
  contours = measure.find_contours(threshold_image, 0.8)
  j=0
  for i in contours:
     if i.shape[0] in range(60,140):
        #print(i.shape[0] )
        j=j+1
  return j

def function_call(dir_name):
  threshold_image=processing(dir_name)
  j=detect_alphabet(threshold_image)
  print(j)
  return j

list_of_dirs1 = glob('/content/drive/MyDrive/Thesis/frame/*/**.jpg')
list_of_dirs1

last_alp_name=0
for files in list_of_dirs1:
  alp_name = files.split('/')[6]
  print(alp_name)
  if (last_alp_name!=alp_name):
    i=0
  else:
    i=i+1
  n=function_call
  result4[alp_name+str(i)] = n
  last_alp_name=alp_name